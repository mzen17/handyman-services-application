# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

pr: none

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  group: dev-db-secrets

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build and Push to Docker Hub
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        echo $(Docker Token) | docker login -u $(Docker Username) --password-stdin
        docker build --build-arg DATABASE_IP="$(DATABASE_IP)" --build-arg DATABASE_NAME="$(DATABASE_NAME)" --build-arg DATABASE_USERNAME="$(DATABASE_USERNAME)" --build-arg DATABASE_PASSWORD="$(DATABASE_PASSWORD)" -f '$(Build.SourcesDirectory)'/staging/Dockerfile -t $(Docker Username)/hsa:$(Build.BuildId)  .
        docker push $(Docker Username)/hsa:$(Build.BuildId)
      displayName: Run Docker build and push Scripts
- stage: Deploy
  displayName: Deploy to K3s Dev Server
  jobs:
  - job: DeployToK3s
    steps:
    - script: |
        # Create SSH directory
        mkdir -p ~/.ssh
        
        # Write private key to file
        echo "$(PRIVATE_KEY)" | tr -d '\r' > ~/.ssh/id_rsa
        
        # Set correct permissions
        chmod 600 ~/.ssh/id_rsa
        
        # Add known hosts
        ssh-keyscan -H $(DATABASE_IP) >> ~/.ssh/known_hosts
      displayName: 'Prepare SSH Key'

    - script: |
        # SSH into remote server and deploy
        ssh -i ~/.ssh/id_rsa \
            -o StrictHostKeyChecking=no \
            root@$(SERVER_IP) \
            -p 22 \
            '
            # Login to Docker Hub (if needed)
            echo $(Docker Token) | docker login -u $(Docker Username) --password-stdin
            
            # Pull the Docker image
            docker pull $(Docker Username)/hsa:latest
            
            # Apply deployment manifest
            kubectl apply -f /root/k8s-manifests/handyman-services-deployment.yaml
            
            # Restart deployment
            kubectl rollout restart deployment handyman-services-deployment
            
            # Check deployment status
            kubectl rollout status deployment handyman-services-deployment
            
            
            '
      
