# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

pr:
- dev

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build Testing Environment
  jobs:
    - job: Build
      displayName: Build Container
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: Docker@2
          displayName: Build Docker Container
          inputs:
            command: build
            buildContext: '$(Build.SourcesDirectory)'
            dockerfile: '**/deployment/testing/frontend/Dockerfile'
            repository: 'hsa-test'
            tags: |
              $(tag)
- stage: Test
  displayName: Run Unit Tests
  jobs:
    - job: Frontend
      displayName: Test Frontend
      pool:
        vmImage: ubuntu-latest
      steps:
        - bash: |
            # Run Docker container with detailed logging
            docker run \
              --name frontend-test \
              hsa-test:$(tag) \
              frontend
          displayName: 'Run Frontend Unit Tests'
          continueOnError: true  # Allow subsequent steps to run

        - bash: |
            # Capture and analyze test results
            TEST_CONTAINER_EXIT_CODE=$(docker inspect frontend-tests --format='{{.State.ExitCode}}')
            
            # Capture logs regardless of test outcome
            docker logs frontend-tests > $(Build.ArtifactStagingDirectory)/frontend-test-results.txt
            
            # Check for any Karma test failures
            if grep -q "FAILED" $(Build.ArtifactStagingDirectory)/frontend-test-results.txt; then
              echo "frontend tests detected failures"
              exit 1
            fi
            
            # Check container exit code
            if [ $TEST_CONTAINER_EXIT_CODE -ne 0 ]; then
              echo "frontend tests failed with exit code $TEST_CONTAINER_EXIT_CODE"
              exit 1
            fi
          displayName: 'Analyze Test Results'
          condition: always()

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Test Results'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'FrontendTestResults'
          condition: always()


    - job: Backend
      displayName: Test Backend
      pool:
        vmImage: ubuntu-latest
      steps:
        - bash: |
            # Run Docker container with detailed logging
            docker run \
              -e DATABASE_NAME=django_test_db \
              -e DATABASE_USERNAME=django_test_user \
              -e DATABASE_PASSWORD=test_password \
              -e DATABASE_IP=localhost \
              --name backend-tests \
              hsa-test:$(tag) \
              backend
          displayName: 'Run Backend Unit Tests'
          continueOnError: true  # Allow subsequent steps to run

        - bash: |
            # Capture and analyze test results
            TEST_CONTAINER_EXIT_CODE=$(docker inspect backend-tests --format='{{.State.ExitCode}}')
            
            # Capture logs regardless of test outcome
            docker logs backend-tests > $(Build.ArtifactStagingDirectory)/backend-test-results.txt
            
            # Check for any Django test failures
            if grep -q "FAILED" $(Build.ArtifactStagingDirectory)/backend-test-results.txt; then
              echo "backend tests detected failures"
              exit 1
            fi
            
            # Check container exit code
            if [ $TEST_CONTAINER_EXIT_CODE -ne 0 ]; then
              echo "backend tests failed with exit code $TEST_CONTAINER_EXIT_CODE"
              exit 1
            fi
          displayName: 'Analyze Test Results'
          condition: always()

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Test Results'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'BackendTestResults'
          condition: always()

    - job: Integration
      displayName: Integration Tests
      pool:
        vmImage: ubuntu-latest
      steps:
        - bash: |
            # Run Docker container with detailed logging
            docker run \
              -e DATABASE_NAME=django_test_db \
              -e DATABASE_USERNAME=django_test_user \
              -e DATABASE_PASSWORD=test_password \
              -e DATABASE_IP=localhost \
              -e INTEGRATION_FLAG=1 \
              --name integration-tests \
              hsa-test:$(tag) \
              integration
          displayName: 'Run Integration Tests'
          continueOnError: true  # Allow subsequent steps to run
        - bash: |
            # Capture and analyze test results
            TEST_CONTAINER_EXIT_CODE=$(docker inspect integration-tests --format='{{.State.ExitCode}}')
            
            # Capture logs regardless of test outcome
            docker logs integration-tests > $(Build.ArtifactStagingDirectory)/integration-test-results.txt
            
            # Check for any Behave test failures
            if grep -q "FAILED" $(Build.ArtifactStagingDirectory)/integration-test-results.txt; then
              echo "Integration tests detected failures"
              exit 1
            fi
            
            # Check container exit code
            if [ $TEST_CONTAINER_EXIT_CODE -ne 0 ]; then
              echo "Integration tests failed with exit code $TEST_CONTAINER_EXIT_CODE"
              exit 1
            fi
          displayName: 'Analyze Test Results'
          condition: always()
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Test Results'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'IntegrationTestResults'
          condition: always()